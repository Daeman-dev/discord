import discord
from discord import Option
from discord.ext import commands
import schedule
import time
import asyncio
from datetime import datetime, timedelta
import sqlite3
import random
import os
from typing import List

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
BIRTHDAY_ROLE_ID = int(os.getenv("BIRTHDAY_ROLE_ID", "998877665544332211"))  # ID —Ä–æ–ª–∏ "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"
CHANNEL_ID = int(os.getenv("CHANNEL_ID", "706224150704029697"))  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
USERS_TO_MENTION = [int(user_id) for user_id in os.getenv("USERS_TO_MENTION", "294860783811035136,294881060263821312,135024441884278784,904383863806128189").split(",")]  # –°–ø–∏—Å–æ–∫ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
DATABASE_FILE = os.getenv("DATABASE_FILE", "data/bot_database.db")  # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ intents (–Ω–∞–º–µ—Ä–µ–Ω–∏–π) –¥–ª—è –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True  # –í–∫–ª—é—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏–π
intents.members = True  # –í–∫–ª—é—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = discord.Bot(intents=intents)

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç."""
    with sqlite3.connect(DATABASE_FILE) as conn:
        cursor = conn.cursor()
        # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS birthdays (
                user_id INTEGER PRIMARY KEY,
                birthday TEXT NOT NULL
            )
        """)
        # –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è —Ñ–∏–ª—å–º–æ–≤
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS movies (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title TEXT NOT NULL,
                watched INTEGER DEFAULT 0
            )
        """)
        conn.commit()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
init_db()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –∫–æ–≥–¥–∞ —Ä–æ–ª—å –±—ã–ª–∞ –≤—ã–¥–∞–Ω–∞
role_assignments = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π
async def send_mentions():
    channel = bot.get_channel(CHANNEL_ID)
    if channel:
        mentions = " ".join([f"<@{user_id}>" for user_id in USERS_TO_MENTION])
        await channel.send(f"**–î–µ–π–ª–∏–∫!** {mentions}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –∏ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏
async def check_birthdays():
    today = datetime.now().strftime("%m-%d")  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ "MM-DD"
    guild = bot.guilds[0]  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä–æ–ª–∏ "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"
    birthday_role = guild.get_role(BIRTHDAY_ROLE_ID)
    if not birthday_role:
        print("–†–æ–ª—å '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return

    with sqlite3.connect(DATABASE_FILE) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT user_id FROM birthdays WHERE birthday = ?", (today,))
        users = cursor.fetchall()

        for user_id in users:
            user = guild.get_member(int(user_id[0]))  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º user_id –≤ int
            if user:
                # –í—ã–¥–∞–µ–º —Ä–æ–ª—å
                await user.add_roles(birthday_role)
                print(f"–†–æ–ª—å '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è' –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name}!")
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞—Ç—É –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏
                role_assignments[user_id[0]] = datetime.now().strftime("%Y-%m-%d")
            else:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id[0]} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–Ω—è—Ç–∏—è —Ä–æ–ª–∏ —á–µ—Ä–µ–∑ 5 –¥–Ω–µ–π
async def remove_birthday_roles():
    guild = bot.guilds[0]  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
    birthday_role = guild.get_role(BIRTHDAY_ROLE_ID)
    if not birthday_role:
        print("–†–æ–ª—å '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return

    for user_id, assignment_date in list(role_assignments.items()):
        assignment_date = datetime.strptime(assignment_date, "%Y-%m-%d")
        if datetime.now() - assignment_date >= timedelta(days=5):
            user = guild.get_member(int(user_id))  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º user_id –≤ int
            if user:
                # –°–Ω–∏–º–∞–µ–º —Ä–æ–ª—å
                await user.remove_roles(birthday_role)
                print(f"–†–æ–ª—å '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è' —Å–Ω—è—Ç–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}!")
                # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –≤—ã–¥–∞—á–µ —Ä–æ–ª–∏
                del role_assignments[user_id]
            else:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞
@bot.slash_command(
    name="–¥–æ–±–∞–≤–∏—Ç—å—Ñ–∏–ª—å–º",
    description="–î–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º –≤ —Å–ø–∏—Å–æ–∫."
)
async def add_movie(
    ctx: discord.ApplicationContext,
    title: Option(str, "–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞.")
):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç —Ñ–∏–ª—å–º –≤ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö.
    """
    with sqlite3.connect(DATABASE_FILE) as conn:
        cursor = conn.cursor()
        cursor.execute("INSERT INTO movies (title, watched) VALUES (?, 0)", (title,))
        conn.commit()
    await ctx.respond(f"–§–∏–ª—å–º '{title}' –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫!")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞
@bot.slash_command(
    name="—Å–ª—É—á–∞–π–Ω—ã–π—Ñ–∏–ª—å–º",
    description="–í—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ —Å–ø–∏—Å–∫–∞."
)
async def random_movie(ctx: discord.ApplicationContext):
    """
    –í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö.
    """
    with sqlite3.connect(DATABASE_FILE) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT id, title FROM movies WHERE watched = 0")
        movies = cursor.fetchall()

        if not movies:
            await ctx.respond("–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç! –î–æ–±–∞–≤—å—Ç–µ —Ñ–∏–ª—å–º—ã —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã `/–¥–æ–±–∞–≤–∏—Ç—å—Ñ–∏–ª—å–º`.")
            return

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º
        movie_id, movie_title = random.choice(movies)
        await ctx.respond(f"–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º: **{movie_title}**\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: üëç (—Å–º–æ—Ç—Ä–µ—Ç—å) –∏–ª–∏ üëé (–æ—Ç–ª–æ–∂–∏—Ç—å).")

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
        message = await ctx.send("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?")
        await message.add_reaction("üëç")  # –°–º–æ—Ç—Ä–µ—Ç—å
        await message.add_reaction("üëé")  # –û—Ç–ª–æ–∂–∏—Ç—å

        # –û–∂–∏–¥–∞–µ–º —Ä–µ–∞–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        def check(reaction, user):
            return user == ctx.author and str(reaction.emoji) in ["üëç", "üëé"]

        try:
            reaction, user = await bot.wait_for("reaction_add", timeout=30.0, check=check)

            if str(reaction.emoji) == "üëç":
                # –ü–æ–º–µ—á–∞–µ–º —Ñ–∏–ª—å–º –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π
                cursor.execute("UPDATE movies SET watched = 1 WHERE id = ?", (movie_id,))
                conn.commit()
                await ctx.send(f"–§–∏–ª—å–º '{movie_title}' –ø–µ—Ä–µ–º–µ—â—ë–Ω –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö!")
            else:
                await ctx.send(f"–§–∏–ª—å–º '{movie_title}' –æ—Ç–ª–æ–∂–µ–Ω.")
        except asyncio.TimeoutError:
            await ctx.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ! –§–∏–ª—å–º –æ—Å—Ç–∞—ë—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
@bot.slash_command(
    name="–≤—Å–µ—Ñ–∏–ª—å–º—ã",
    description="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã."
)
async def list_all_movies(ctx: discord.ApplicationContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Ñ–∏–ª—å–º—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    """
    with sqlite3.connect(DATABASE_FILE) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT title, watched FROM movies")
        movies = cursor.fetchall()

        if not movies:
            await ctx.respond("–°–ø–∏—Å–æ–∫ —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç! –î–æ–±–∞–≤—å—Ç–µ —Ñ–∏–ª—å–º—ã —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã `/–¥–æ–±–∞–≤–∏—Ç—å—Ñ–∏–ª—å–º`.")
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ —Ñ–∏–ª—å–º–∞–º–∏
        message = "**–í—Å–µ —Ñ–∏–ª—å–º—ã:**\n"
        message += "**–ù–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ:**\n"
        message += "\n".join([title for title, watched in movies if watched == 0]) or "–ù–µ—Ç —Ñ–∏–ª—å–º–æ–≤.\n"
        message += "\n**–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ:**\n"
        message += "\n".join([title for title, watched in movies if watched == 1]) or "–ù–µ—Ç —Ñ–∏–ª—å–º–æ–≤."

        await ctx.respond(message)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤
@bot.slash_command(
    name="–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ",
    description="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã."
)
async def list_watched_movies(ctx: discord.ApplicationContext):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã.
    """
    with sqlite3.connect(DATABASE_FILE) as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT title FROM movies WHERE watched = 1")
        movies = cursor.fetchall()

        if not movies:
            await ctx.respond("–°–ø–∏—Å–æ–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –ø—É—Å—Ç!")
            return

        message = "**–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã:**\n"
        message += "\n".join([title for title, in movies])
        await ctx.respond(message)

# –ó–∞–¥–∞—á–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è
def schedule_daily_tasks():
    # –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "HH:MM" (–Ω–∞–ø—Ä–∏–º–µ—Ä, "09:00")
    schedule.every().day.at("08:30").do(lambda: asyncio.create_task(send_mentions()))
    schedule.every().day.at("00:00").do(lambda: asyncio.create_task(check_birthdays()))  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –ø–æ–ª–Ω–æ—á—å
    schedule.every().day.at("00:00").do(lambda: asyncio.create_task(remove_birthday_roles()))  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –ø–æ–ª–Ω–æ—á—å

# –°–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
@bot.event
async def on_ready():
    await bot.sync_commands()  # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥
    print(f"–ë–æ—Ç {bot.user.name} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    schedule_daily_tasks()  # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
    while True:
        schedule.run_pending()
        await asyncio.sleep(1)  # –û–∂–∏–¥–∞–µ–º 1 —Å–µ–∫—É–Ω–¥—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(BOT_TOKEN)